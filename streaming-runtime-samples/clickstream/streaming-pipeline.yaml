apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: user-stream
spec:
  name: user
  protocol: "kafka"
  storage:
    clusterStream: "cluster-stream-user"
  dataSchemaContext:
    inline:
      type: 'avro'
      schema: |
        namespace: com.tanzu.streaming.runtime.clickstream.etl
        type: record
        name: Users
        fields:
        - name: user_id
          type: string
        - name: name
          type: string
        - name: level
          type: string
    timeAttributes:
      - name: proctime
    options:
      ddl.scan.startup.mode: earliest-offset
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: click-stream
spec:
  name: click
  protocol: kafka
  storage:
    clusterStream: "cluster-stream-click"
  dataSchemaContext:
    schema:
      namespace: com.tanzu.streaming.runtime.clickstream.etl
      name: Clicks
      fields:
        - name: user_id
          type: string
        - name: page
          type: int
        - name: action
          type: string
        - name: device
          type: string
        - name: agent
          type: string
        - name: event_time
          type: long_timestamp-millis
          metadata:
            from: timestamp
            readonly: true
          watermark: "`event_time` - INTERVAL '30' SECONDS"
    options:
      ddl.scan.startup.mode: earliest-offset
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: vip-join-and-filter
spec:
  type: FSQL
  inlineQuery:
    - "INSERT INTO [[STREAM:vip-action-stream]] 
       SELECT Users.user_id, Users.name, Clicks.page, Clicks.action, Clicks.event_time 
       FROM [[STREAM:click-stream]]  
       INNER JOIN [[STREAM:user-stream]] ON Clicks.user_id = Users.user_id  
       WHERE Users.level = 'PLATINUM'"
  attributes:
    debugQuery: "SELECT * FROM VipActions"
    debugExplain: "3"
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: vip-action-stream
spec:
  name: vip-action
  protocol: "kafka"
  storage:
    clusterStream: "cluster-stream-vip-action"
  dataSchemaContext:
    schema:
      namespace: com.tanzu.streaming.runtime.clickstream.etl
      name: VipActions
      fields:
        - name: user_id
          type: string
        - name: name
          type: string
        - name: page
          type: int
        - name: action
          type: string
        - name: event_time
          type: long_timestamp-millis
          watermark: "`event_time` - INTERVAL '1' SECOND"
    options:
      ddl.key.fields: user_id
      ddl.value.format: "json"
      ddl.properties.allow.auto.create.topics: "true"
      ddl.scan.startup.mode: earliest-offset
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: vip-act-upon
spec:
  type: SRP
  inputs:
    - name: "vip-action-stream"
  outputs:
    - name: "udf-output-stream"
  template:
    spec:
      containers:
        - name: uppercase-grpc
          image: ghcr.io/vmware-tanzu/streaming-runtimes/udf-uppercase-go:0.1
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: udf-output-stream
spec:
  name: udf-output
  protocol: "rabbitmq"
  storage:
    clusterStream: "cluster-stream-udf-output"
