#
# Variation of the 5-partition-by-field-with-stateful-replication.yaml that uses message headers as 
# partitioning keys. 
# The 'spec.keys' value in the partitioned Stream must exist as a header name in the messages 
# carried by that stream.
#
# Also the 'data-in-stream' and 'team-scores-stream' Stream definitions are dropped in favor 
# of auto-provisioned defaults.
#
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: user-partition-processor
spec:
  inputs:
    - name: data-in
  outputs:
    - name: partitioned-by-team-stream
  attributes:
    # The header name used for partitioning must match the outbound stream's spec.keys names!!!
    scw.output.headers: "team=payload.team"
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: partitioned-by-team-stream
spec:
  name: partitioned-by-team
  protocol: kafka
  # The 'team' is expected to be a inbound message header name!!!
  keys: ["team"]
  partitionCount: 3
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: user-scores-processor
spec:
  replicas: 3
  inputs:
    - name: partitioned-by-team-stream
  outputs:
    - name: team-scores
  attributes:
    scw.spel.expression: "'Team:' + #jsonPath(payload, '$.team') + ', Score:' + #jsonPath(payload, '$.score')"
