apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: data-in-stream
spec:
  name: data-in
  protocol: kafka
  dataSchemaContext:
    schema:
      namespace: sr.poc.online.gaming
      name: User
      fields:
        - name: id
          type: string
        - name: fullName
          type: string
        - name: team
          type: string
        - name: email
          type: string
        - name: score
          type: int
        - name: score_time
          type: long_timestamp-millis
    timeAttributes:
      # Data field to be used as an event-time.
      # Generated watermark uses 2 sec. out-of-orderness.
      - name: score_time
        watermark: "`score_time` - INTERVAL '2' SECOND"
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: user-partition-processor
spec:  
  type: SRP
  inputs:
    - name: data-in-stream
  outputs:
    - name: partitioned-by-user-stream
  attributes:
    #  Extract the payload#fullName value into an output message header 'user'.
    #  Note: header name should match the output stream's 'keys' value for the partitioning wont work!
    srp.output.headers: 
      "user=payload.fullName"

---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: partitioned-by-user-stream
spec:
  name: partitioned-by-user
  protocol: kafka
  keys: ["user"]
  partitionCount: 5
  dataSchemaContext:
    schemaless: "application/json"
    timeAttributes:
      - name: "header.eventtime"
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: user-scores-processor
spec:
  type: SRP
  replicas: 2
  inputs:
    - name: partitioned-by-user-stream
  outputs:
    - name: user-scores-stream
  attributes:
    srp.window: 2s
    srp.window.idle.timeout: 30s
    srp.output.headers: "team=payload.team"
    srp.lateEventMode: "SIDE_CHANNEL"
  template:
    spec:
      containers:
        - name: scores-by-user-java
          image: ghcr.io/vmware-tanzu/streaming-runtimes/gaming-user-score:latest
          # env:
          #   - name: USER_SCORE_AVROSCHEMAURI
          #     value: "file://dummy"

---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: user-scores-stream
spec:
  name: user-scores
  protocol: kafka
  keys: ["team"]
  partitionCount: 3
  dataSchemaContext:
    schemaless: "application/json"
    timeAttributes:
      - name: "header.eventtime"
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Processor
metadata:
  name: team-scores-processor
spec:
  type: SRP
  replicas: 3
  inputs:
    - name: user-scores-stream
  outputs:
    - name: team-scores-stream
  attributes:
    srp.window: 5s
    srp.window.idle.timeout: 140s
    srp.lateEventMode: "SIDE_CHANNEL"
  template:
    spec:
      containers:
        - name: scores-by-team-javascript
          image: ghcr.io/vmware-tanzu/streaming-runtimes/gaming-team-score:latest
---
apiVersion: streaming.tanzu.vmware.com/v1alpha1
kind: Stream
metadata:
  name: team-scores-stream
spec:
  name: team-scores
  protocol: kafka
